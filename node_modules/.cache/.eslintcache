[{"/Users/kevinendo/Docs/pinnydb/src/index.js":"1","/Users/kevinendo/Docs/pinnydb/src/App.js":"2","/Users/kevinendo/Docs/pinnydb/src/reportWebVitals.js":"3","/Users/kevinendo/Docs/pinnydb/src/components/pins-list.js":"4","/Users/kevinendo/Docs/pinnydb/src/components/global-nav.js":"5","/Users/kevinendo/Docs/pinnydb/src/components/pins-list-subset.js":"6","/Users/kevinendo/Docs/pinnydb/src/components/pin-detail.js":"7","/Users/kevinendo/Docs/pinnydb/src/services/pin.js":"8","/Users/kevinendo/Docs/pinnydb/src/services/http-common.js":"9","/Users/kevinendo/Docs/pinnydb/src/components/about.js":"10","/Users/kevinendo/Docs/pinnydb/src/components/article.js":"11","/Users/kevinendo/Docs/pinnydb/src/components/article-list.js":"12","/Users/kevinendo/Docs/pinnydb/src/components/ad-component.js":"13","/Users/kevinendo/Docs/pinnydb/src/components/search.js":"14","/Users/kevinendo/Docs/pinnydb/src/components/pin-set.js":"15"},{"size":240,"mtime":1621377981131,"results":"16","hashOfConfig":"17"},{"size":1368,"mtime":1623907300685,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1621545717723,"results":"19","hashOfConfig":"17"},{"size":2872,"mtime":1623909355341,"results":"20","hashOfConfig":"17"},{"size":13131,"mtime":1623909715443,"results":"21","hashOfConfig":"17"},{"size":1370,"mtime":1623907844790,"results":"22","hashOfConfig":"17"},{"size":3368,"mtime":1623948683633,"results":"23","hashOfConfig":"17"},{"size":575,"mtime":1621717658439,"results":"24","hashOfConfig":"17"},{"size":327,"mtime":1623898447732,"results":"25","hashOfConfig":"17"},{"size":598,"mtime":1623948235387,"results":"26","hashOfConfig":"17"},{"size":128,"mtime":1621783473388,"results":"27","hashOfConfig":"17"},{"size":150,"mtime":1621783404479,"results":"28","hashOfConfig":"17"},{"size":421,"mtime":1623106048526,"results":"29","hashOfConfig":"17"},{"size":633,"mtime":1623908193125,"results":"30","hashOfConfig":"17"},{"size":1248,"mtime":1623948642440,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1tfc8tq",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},"/Users/kevinendo/Docs/pinnydb/src/index.js",[],["66","67"],"/Users/kevinendo/Docs/pinnydb/src/App.js",[],"/Users/kevinendo/Docs/pinnydb/src/reportWebVitals.js",[],"/Users/kevinendo/Docs/pinnydb/src/components/pins-list.js",["68"],"import React, { useState, useEffect } from \"react\";\nimport PinDataService from \"../services/pin\";\nimport { Link } from \"react-router-dom\";\nimport '../App.css'\nimport { useLocation } from 'react-router-dom'\nimport queryString from 'query-string'\n\nconst PinsList = props => {\n  const [pins, setPins] = useState([]);\nlet page = 0;\nconst { search } = useLocation();\nconst values = queryString.parse(search);\nif (values.page != null) {\n  page = values.page;\n} else {\n  page = 1;\n}\n\nlet prevPage = \"\";\nlet nextPage = \"\";\n\nif (parseInt(page) === 1)  {\n  prevPage = \"/?page=13\";\n  nextPage = \"/?page=\" + (parseInt(page)+1);\n} else if (parseInt(page) === 13) {\n  prevPage = \"/?page=\" + (parseInt(page)-1);\n  nextPage = \"/?page=1\";\n} else {\n  prevPage = \"/?page=\" + (parseInt(page)-1);\n  nextPage = \"/?page=\" + (parseInt(page)+1);\n}\n\n  useEffect(() => {\n    retrievePins();\n  }, []);\n\n  const retrievePins = () => {\n    PinDataService.getAll(page)\n      .then(response => {\n        console.log(response.data);\n        setPins(response.data);        \n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  return(\n    <div className=\"mw-content-ltr\">\n      {/*\n            <form className=\"search-box\">\n              <input id=\"myInput\" className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" placeHolder=\"Search by Name\" value={searchName} onChange={onChangeSearchName} onKeyPress={handleKeypress}/>\n              <button id =\"myBtn\" className=\"btn btn-outline-success\" type=\"submit\" onClick={findByName}>Search</button>\n          </form>\n      */}\n      <ul className=\"gallery mw-gallery-traditional\">\n      {\n          pins.map(pin => (\n            <li key={pin.pin_name} className=\"gallerybox\">\n                <div className=\"pinbox\">\n                  <Link to={\"/pinDetail/\"+pin.pin_id}>\n                    \n                    <div className=\"thumb\"><img alt={pin.pin_name} width=\"100\" src={\"/images/\" + pin.category.replace(/ /g, '') + \"/\" + pin.main_img}/></div>\n          \n                    <div className=\"pinname\">{pin.pin_name}</div>\n                    <div className=\"pinset\">{pin.set}</div></Link>\n                </div>\n           </li>\n          ))\n      }\n      </ul>\n      <div className=\"center\">\n      <div className=\"pagination\">\n        <a href={prevPage}>&lt;</a>\n        <a href=\"/?page=1\">1</a>\n        <a href=\"/?page=2\">2</a>\n        <a href=\"/?page=3\">3</a>\n        <a href=\"/?page=4\">4</a>\n        <a href=\"/?page=5\">5</a>\n        <a href=\"/?page=6\">6</a>\n        <a href=\"/?page=7\">7</a>\n        <a href=\"/?page=8\">8</a>\n        <a href=\"/?page=9\">9</a>\n        <a href=\"/?page=10\">10</a>\n        <a href=\"/?page=11\">11</a>\n        <a href=\"/?page=12\">12</a>\n        <a href=\"/?page=13\">13</a>\n        <a href={nextPage}>&gt;</a>\n        </div>\n        </div>\n      </div>\n);\n}\nexport default PinsList;","/Users/kevinendo/Docs/pinnydb/src/components/global-nav.js",[],"/Users/kevinendo/Docs/pinnydb/src/components/pins-list-subset.js",[],"/Users/kevinendo/Docs/pinnydb/src/components/pin-detail.js",["69","70","71","72"],"import React, { useState, useEffect } from \"react\";\nimport PinDataService from \"../services/pin\";\nimport { Link } from \"react-router-dom\"\nimport PinSet from \"../components/pin-set\";\n\nconst PinDetail = props => {\n  const initialPinState = {\n    _id: null,\n    pin_id: 0,\n    Img: \"\",\n    pin_name: \"\",\n    main_img: \"\",\n    alt_name: \"\",\n    category: \"\",\n    date: \"\",\n    year: \"\",\n    company: \"\",\n    property: false,\n    tags: \"\",\n    type: \"\",\n    set: false,\n    price: \"\",\n    tier: 0,\n    notes: \"\",\n    url: false,\n    artist: false,\n    images: \"\"\n  };\n\n\nconst [pinInfo, setPin] = useState(initialPinState);\nconst [pinSet, setPins] = useState([]);\n\n\n\nconst getPin = pin_id => {\n  PinDataService.get(pin_id)\n    .then(response => {\n      setPin(response.data);\n    })\n    .catch(e => {\n      console.log(e);\n    });\n};\n{/*\nconst retrievePins = set => {\n  PinDataService.getSet(set)\n    .then(response => {\n      setPins(response.data);        \n    })\n    .catch(e => {\n      console.log(e);\n    });\n}; \n*/}\nuseEffect(() => {\n  getPin(props.match.params.pin_id);\n}, [props.match.params.pin_id]);\n{/*\nretrievePins(pinInfo.set);\n*/}\nconst pinTags = pinInfo.tags.split(\", \");\nlet pinImages = \"\"\nif(pinInfo.images !== undefined)  {\n  pinImages = pinInfo.images.split(\", \");\n} \n\n  return (\n    <div>\n      {pinInfo ? (\n        <div>\n  <div className=\"detail-box\">\n  <h3>{pinInfo.pin_name}</h3>\n    <div className=\"row\">\n      <div className=\"column left\">\n        <img alt={pinInfo.pin_name} width=\"140\" src={\"/images/\" + pinInfo.category.replace(/ /g, '') + \"/\" + pinInfo.main_img}/>\n      </div>\n      <div className=\"column right\">\n        <div><b>Category:</b> <Link to={\"/category/\"+pinInfo.category}>{pinInfo.category}</Link></div>    \n        <div> <b>Release Date:</b> {pinInfo.date}</div>\n        <div><b>Company:</b> <Link to={\"/company/\"+pinInfo.company}>{pinInfo.company}</Link></div>\n        <div><b>Type:</b> <Link to={\"/type/\"+pinInfo.type}>{pinInfo.type}</Link></div>\n        { pinInfo.property ? <div><b>Property:</b> <Link to={\"/property/\"+pinInfo.property}>{pinInfo.property}</Link></div> : <div></div> }\n        { pinInfo.artist ? <div><b>Artist:</b> {pinInfo.artist}</div> : <div></div> }\n      </div>\n    </div>\n    <br/>\n    <p>{pinInfo.notes}</p>\n    { pinInfo.url ? <div><a href={pinInfo.url} target=\"_blank\" rel=\"noreferrer\">More Info</a><br/></div> : <div></div> }\n    { (pinInfo.tags !== \"\") ? (\n    <ul className=\"tag-list\">\n      {\n        pinTags.map(tag => (\n          <div>\n            <li key={\"tag\" + tag} className=\"tag-list-item\"><Link to={\"/tags/\"+tag}>{tag.toUpperCase()}</Link></li>\n          </div>\n        ))\n      }\n    </ul>\n    ) : (\n      <div></div>\n    )\n}\n\n{ (pinImages !== \"\") ? (\n    <ul className=\"gallery mw-gallery-traditional\">\n      {\n        pinImages.map(pinImage => (\n            <li key={pinImage} className=\"gallerybox\"><Link to={\"/images/\" + pinInfo.category.replace(/ /g, '') + \"/\" + pinImage} target=\"_blank\"><img alt={pinImage} width=\"200\" src={\"/images/\" + pinInfo.category.replace(/ /g, '') + \"/\" + pinImage}/></Link></li>         \n        ))\n      }\n    </ul>\n    ) : (\n      <div></div>\n    )\n}\n    </div>\n\n  { pinInfo.set  ? (    \n    <PinSet setName={pinInfo.set}/>\n   ) : (<div></div>) }\n</div>\n      ) : (\n        <div>No Pin</div>\n      )}    \n\n    </div>\n  );\n}\n\nexport default PinDetail;\n\n","/Users/kevinendo/Docs/pinnydb/src/services/pin.js",[],"/Users/kevinendo/Docs/pinnydb/src/services/http-common.js",[],"/Users/kevinendo/Docs/pinnydb/src/components/about.js",[],"/Users/kevinendo/Docs/pinnydb/src/components/article.js",[],"/Users/kevinendo/Docs/pinnydb/src/components/article-list.js",[],"/Users/kevinendo/Docs/pinnydb/src/components/ad-component.js",[],"/Users/kevinendo/Docs/pinnydb/src/components/search.js",[],"/Users/kevinendo/Docs/pinnydb/src/components/pin-set.js",["73"],"\nimport React, { useState, useEffect } from \"react\";\nimport PinDataService from \"../services/pin\";\nimport { Link } from \"react-router-dom\";\nimport '../App.css'\n\nfunction PinSet(props) {\n  const [pins, setPins] = useState([]);\n\n  const getPin = (by, query) => {\n    PinDataService.find(by, query)\n      .then(response => {\n        setPins(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n  \n  useEffect(() => {\n    getPin(\"set\", props.setName);\n  }, [\"set\", props.setName]);\n\n\n  return(\n    <div>\n    <div class=\"set-name\">{props.setName}</div> \n      <ul className=\"gallery mw-gallery-traditional\">\n      {\n          pins.map(pin => (\n            <li key={pin.pin_name} className=\"gallerybox\">\n                <div className=\"pinbox\">\n                  <Link to={\"/pinDetail/\"+pin.pin_id}>\n                    <div className=\"thumb\"><img alt={pin.pin_name} width=\"100\" src={\"/images/\" + pin.category.replace(/ /g, '') + \"/\" + pin.main_img}/></div>\n                  \n                    <div className=\"pinname\">{pin.pin_name}</div>\n                    <div className=\"pinset\">{pin.set}</div></Link>\n                </div>\n           </li>\n          ))\n      }\n      </ul>\n      </div>\n);\n}\nexport default PinSet;",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":35,"column":6,"nodeType":"80","endLine":35,"endColumn":8,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":32,"column":8,"nodeType":"84","messageId":"85","endLine":32,"endColumn":14},{"ruleId":"82","severity":1,"message":"86","line":32,"column":16,"nodeType":"84","messageId":"85","endLine":32,"endColumn":23},{"ruleId":"87","severity":1,"message":"88","line":45,"column":1,"nodeType":"89","messageId":"90","endLine":55,"endColumn":4},{"ruleId":"87","severity":1,"message":"88","line":59,"column":1,"nodeType":"89","messageId":"90","endLine":61,"endColumn":4},{"ruleId":"78","severity":1,"message":"91","line":22,"column":7,"nodeType":"92","endLine":22,"endColumn":12},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrievePins'. Either include it or remove the dependency array.","ArrayExpression",["95"],"no-unused-vars","'pinSet' is assigned a value but never used.","Identifier","unusedVar","'setPins' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","The \"set\" literal is not a valid dependency because it never changes. You can safely remove it.","Literal","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [retrievePins]",{"range":"98","text":"99"},[869,871],"[retrievePins]"]